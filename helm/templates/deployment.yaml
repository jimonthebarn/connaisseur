apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Chart.Name }}-deployment
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/component: connaisseur-core
    {{- include "helm.labels" . | nindent 4 }}
  annotations:
    checksum/config: {{ include "getConfigChecksum" . }}
spec:
  replicas: {{ .Values.kubernetes.deployment.replicasCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "helm.name" . }}
      app.kubernetes.io/instance: {{ .Chart.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/component: connaisseur-core
        app.kubernetes.io/name: {{ include "helm.name" . }}
        app.kubernetes.io/instance: {{ .Chart.Name }}
        {{- with .Values.kubernetes.deployment.podLabels }}
          {{- toYaml . | nindent 8 }}
        {{- end }}
      annotations:
        checksum/config: {{ include "getConfigChecksum" . }}
        {{- if .Values.kubernetes.deployment.annotations }}
          {{- toYaml .Values.kubernetes.deployment.annotations | nindent 8 }}
        {{- end }}
    spec:
      serviceAccountName: {{ .Chart.Name }}-serviceaccount
    {{- with .Values.kubernetes.deployment.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.kubernetes.deployment.image.repository }}:{{ default (print "v" .Chart.AppVersion) .Values.kubernetes.deployment.image.tag }}"
          imagePullPolicy: {{ .Values.kubernetes.deployment.imagePullPolicy }}
          ports:
            - containerPort: 5000
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /health
              port: 5000
              scheme: HTTPS
            initialDelaySeconds: 10
            periodSeconds: 5
          readinessProbe:
            httpGet:
              path: /ready
              port: 5000
              scheme: HTTPS
            initialDelaySeconds: 5
            periodSeconds: 5
          volumeMounts:
            - name: {{ .Chart.Name }}-certs
              mountPath: /app/certs
              readOnly: true
            {{- if .Values.alerting}}
            - name: {{ .Chart.Name }}-alert-templates
              mountPath: "/app/config/templates"
              readOnly: true
            - name: {{ .Chart.Name }}-alertconfig
              mountPath: "/app/config"
              readOnly: true
            {{- end }}
            - name: {{ .Chart.Name }}-config
              mountPath: /app/connaisseur-config/config.yaml
              subPath: config.yaml
              readOnly: true
            {{- if (include "hasConfigSecrets" .) }}
            - name: {{ .Chart.Name }}-config-secrets
              mountPath: /app/connaisseur-config/config-secrets.yaml
              subPath: config-secrets.yaml
              readOnly: true
            {{- end }}
            - name: {{ .Chart.Name }}-config-sigstore
              mountPath: /app/.sigstore
              readOnly: false
            {{ include "external-secrets-mount" . | nindent 12}}
            {{ include "cosignCertVolMount" . | nindent 12 }}
            {{- if .Values.kubernetes.deployment.extraVolumeMounts }}
            {{ tpl (toYaml .Values.kubernetes.deployment.extraVolumeMounts) . | nindent 12}}
            {{- end }}
          envFrom:
            - configMapRef:
                name: {{ .Chart.Name }}-env
            - secretRef:
                name: {{ .Chart.Name }}-env-secrets
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
          resources:
            {{- toYaml .Values.kubernetes.deployment.resources | nindent 12 }}
          securityContext:
            {{- toYaml .Values.kubernetes.deployment.securityContext | nindent 12 }}
        {{- if .Values.kubernetes.deployment.extraContainers }}
        {{ tpl (toYaml .Values.kubernetes.deployment.extraContainers) . | nindent 8}}
        {{- end }}
      {{- with .Values.kubernetes.deployment.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.kubernetes.deployment.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.kubernetes.deployment.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- if .Values.kubernetes.deployment.podSecurityContext }}
      {{- with .Values.kubernetes.deployment.podSecurityContext }}
      securityContext:
          {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- end }}
      volumes:
        - name: {{ .Chart.Name }}-certs
          secret:
            secretName: {{ .Chart.Name }}-tls
        {{- if .Values.alerting}}
        - name: {{ .Chart.Name }}-alertconfig
          secret:
            secretName: {{ .Chart.Name }}-alertconfig
        - name: {{ .Chart.Name }}-alert-templates
          configMap:
            name: {{ .Chart.Name }}-alert-templates
        {{- end }}
        - name: {{ .Chart.Name }}-config
          configMap:
            name: {{ .Chart.Name }}-config
        {{- if (include "hasConfigSecrets" .) }}
        - name: {{ .Chart.Name }}-config-secrets
          secret:
            secretName: {{ .Chart.Name }}-config-secrets
        {{- end }}
        - name: {{ .Chart.Name }}-config-sigstore
          emptyDir: {}
        {{ include "external-secrets-vol" . | nindent 8}}
        {{ include "cosignCertVol" . | nindent 8 }}
        {{- if .Values.kubernetes.deployment.extraVolumes }}
        {{ tpl (toYaml .Values.kubernetes.deployment.extraVolumes) . | nindent 8}}
        {{- end }}
